{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","GoodList","goods","map","good","App","useState","sortField","setSortField","reversedList","setReversedList","visibleGoods","isReversed","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBbC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KACL,SAAAC,GAAI,OACF,oBACE,UAAQ,OADV,SAIGA,GAFIA,SASFC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAzCe,SAACT,EAAOK,EAAWK,GACxC,IAAIC,EAAa,YAAOX,GAmBxB,OAjBIK,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKR,EACH,OAAOgB,EAAME,cAAcD,GAC7B,KAAKhB,EACH,OAAOe,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXN,IACFC,EAAgBA,EAAcM,WAGzBN,EAqBcO,CAAetB,EAAiBS,EAAWE,GAEhE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYhB,IAAcR,IAGhCyB,QAAS,kBAAMhB,EAAaT,IAT9B,iCAcA,wBACEuB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYhB,IAAcP,IAGhCwB,QAAS,kBAAMhB,EAAaR,IAT9B,4BAcA,wBACEsB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAad,IAGnBe,QAAS,kBAAMd,GAAiBD,IATlC,sBAcEF,EAAUW,OAAS,GAAKT,IACxB,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,YACrCC,QAAS,WACPhB,EAAa,IACbE,GAAgB,IALpB,sBAaJ,cAAC,EAAD,CAAUR,MAAOS,QCzHvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69724ddf.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nconst getSortedGoods = (goods, sortField, isReversed) => {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(\n      good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ),\n    )}\n  </ul>\n);\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversedList, setReversedList] = useState(false);\n  const visibleGoods = getSortedGoods(goodsFromServer, sortField, reversedList);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n            )\n          }\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SORT_FIELD_LENGTH },\n            )\n          }\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !reversedList },\n            )\n          }\n          onClick={() => setReversedList(!reversedList)}\n        >\n          Reverse\n        </button>\n\n        {(sortField.length > 0 || reversedList) && (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n            onClick={() => {\n              setSortField('');\n              setReversedList(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}